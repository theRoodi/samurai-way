{"version":3,"file":"static/js/379.a68514d5.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileStatus/ProfileStatusHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","hoc/AuthRedirect.tsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__4m6c1\"};","import {ChangeEvent, useEffect, useState} from 'react';\r\n\r\nexport const ProfileStatusHooks = (props: any) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n    const deactivateMode = () => {\r\n        setEditMode(!editMode)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateMode}> {props.status || '-------'} </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus onBlur={deactivateMode} value={status}/>\r\n                </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport style from './ProfileInfo.module.css'\r\nimport {Preloader} from '../../common/Preloader/Preloader';\r\nimport {ProfileType} from '../../../state/profileReducer';\r\nimport avatar from '../../../assets/images/defaultAvatar.png';\r\nimport {ProfileStatusHooks} from '../ProfileStatus/ProfileStatusHooks';\r\n\r\nexport type PropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\nexport const ProfileInfo = (props: PropsType) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src=\"https://codetheweb.blog/assets/img/posts/css-advanced-background-images/cover.jpg\"\r\n                     alt=\"cover\"/>\r\n            </div>\r\n            <div className={style.descriptionBlock}>\r\n                <div><img src={props.profile.photos.small !== null ? props.profile.photos.small : avatar} alt=\"\"/></div>\r\n                <div><b>Full Name:</b> {props.profile.fullName}</div>\r\n                <div><ProfileStatusHooks status={props.status} updateStatus={props.updateStatus}/></div>\r\n                <div><b>Site:</b> {props.profile.contacts.website}</div>\r\n                <div><b>Github:</b> {props.profile.contacts.github}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__iNuD3\"};","import React from 'react';\r\nimport style from './Post.module.css'\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likes: number\r\n}\r\nexport const Post = (props: PropsType) => {\r\n    return (\r\n\r\n        <div className={style.item}>\r\n            <img\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/59/User-avatar.svg/2048px-User-avatar.svg.png\"\r\n                alt=\"avatar\"/>\r\n            <span>{props.message}</span>\r\n            <div>{props.likes} likes</div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__7i77Q\",\"postsBlock\":\"MyPosts_postsBlock__fhB5O\"};","import React, {memo} from 'react';\r\nimport {Post} from './Post/Post';\r\nimport style from './MyPosts.module.css'\r\nimport {PostType} from '../../../state/state';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, requiredFiled} from '../../../utils/validator';\r\nimport {FormControl} from '../../common/FormsControl/FormsControl';\r\n\r\ntype PropsType = {\r\n    addPost: (value: string) => void\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n\r\n}\r\n\r\n\r\nexport const MyPosts = memo((props: PropsType) => {\r\n    const postsElements = props.posts.map(m => <Post key={m.id} message={m.message} likes={m.likes}/>)\r\n\r\n    const onAddPost = (value: any) => {\r\n        props.addPost(value.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={style.postsBlock}>\r\n            <h3>my post</h3>\r\n            <div>\r\n                <PostFormRedux onSubmit={onAddPost}/>\r\n                <div className={style.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst maxLength = maxLengthCreator(30)\r\nconst PostForm = (props: any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder=\"Type your post\"\r\n                       component={FormControl}\r\n                       child=\"textarea\"\r\n                       name=\"newPostText\"\r\n                       validate={[requiredFiled, maxLength]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst PostFormRedux = reduxForm({form: 'postForm'})(PostForm)\r\n","import React from 'react';\r\nimport {RootStateType} from '../../../state/state';\r\nimport {addPost} from '../../../state/profileReducer';\r\nimport {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state: RootStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nexport const MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts)","import React from 'react';\r\nimport {ProfileInfo, PropsType} from './ProfileInfo/ProfileInfo';\r\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer';\r\n\r\n\r\nexport const Profile = (props: PropsType) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Profile} from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getProfile, getStatus, ProfileType, updateStatus} from '../../state/profileReducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {authRedirect} from '../../hoc/AuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\ntype PathParamType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    authorizedUserId: number | null\r\n    isAuth: boolean\r\n\r\n}\r\ntype MapDispatchPropsType = {\r\n    setUserProfile: (profile: ProfileType) => void\r\n}\r\ntype MapPropsType = MapStatePropsType & MapDispatchPropsType\r\ntype PropsType = RouteComponentProps<PathParamType> & MapPropsType\r\n\r\nexport class ProfileContainer extends React.Component<any, PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    authRedirect\r\n)(ProfileContainer)","import React, {ComponentType} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../redux/redux-store';\r\nimport {AuthPropsType} from '../components/Dialogs/Dialogs';\r\n\r\ntype MapStatePropsType = {\r\n    auth : AuthPropsType\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType):MapStatePropsType => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\nexport function authRedirect <T>(Component: ComponentType<T>) {\r\n    function RedirectComponent(props: MapStatePropsType) {\r\n        let {auth, ...restProps} = props\r\n        if (!auth.isAuth) {\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        return <Component {...restProps as T} />\r\n    }\r\n\r\n    let Connected = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return Connected\r\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["ProfileStatusHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","src","alt","className","style","photos","small","avatar","fullName","contacts","website","github","Preloader","Post","message","likes","MyPosts","memo","postsElements","posts","map","m","id","PostFormRedux","onSubmit","addPost","newPostText","maxLength","maxLengthCreator","reduxForm","form","handleSubmit","Field","placeholder","component","FormControl","child","name","validate","requiredFiled","MyPostsContainer","connect","state","profilePage","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","React","compose","auth","isAuth","withRouter","authRedirect","mapStateToProps","Component","restProps","to","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","length","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}